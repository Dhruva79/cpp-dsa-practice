#include <iostream>
using namespace std;

int main() {

	int row, col;

	cout <<"enter no. of rows: " ;  cin >> row; cout << endl;
	cout << "enter the no. of col ";  cin >> col; cout << endl;
	
	

	//created array of pointers
	int** a = new  int*[row];

	// (this is not the array in heap)
	//Allocate each row (columns)
	//just the 1st element of each row
	//not taking input here

	for (int i = 0; i < row; i++) {
		a[i] = new int[col];
	
	}

	//taking input for the array in heap

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			cin >> a[i][j];
		}
	}
	cout << endl;

	//to print the array

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			cout << a[i][j] << " ";
		}
		cout << endl;
	}
	//to release memory
	//1. releasing memory in heap
	for (int i = 0; i < row; i++) {
		delete[]a[i];
	}
	//2. releasing the array of pointers(on the left)
	delete []a;

	return 0;

}

//easy to understand
#include <iostream>
using namespace std;

int main() {

	int row, col;
	cin >> row >> col;

	//create a array of pointers
		int** a = new int*[row];

	//create a 2d array in heap memory;
		for (int i = 0; i < row; i++) {
			a[i] = new int[col];
		}

	//take input for the 2d array;
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				cin >> a[i][j];
			}
		}

	//print the 2d array;
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				cout << a[i][j]; cout << " ";
			}
			cout << endl;
		}

	//delete the dynamic array in heap
		for (int i = 0; i < row; i++) {
			delete[]a[i];
		}
	//delete the pointer array
		delete[]a;



	return 0;
}


